name: Release IPFS Staging
on:
  push:
    branches:
      - staging

jobs:
  create_release:
    name: Create IPFS Release

    runs-on: ubuntu-latest

    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install and Build
        run: |
          npm install
          npm run build
        env:
          REACT_APP_INFURA_API_KEY: ${{ secrets.REACT_APP_INFURA_API_KEY }}
          REACT_APP_ALCHEMY_API_KEY: ${{ secrets.REACT_APP_ALCHEMY_API_KEY }}
          REACT_APP_SITE_URL: ${{ secrets.REACT_APP_SITE_URL }}
          REACT_APP_REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_REACT_APP_SENTRY_DSN }}
          NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY }}
          NEXT_PUBLIC_INFURA_API_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_API_KEY }}

      - name: IPFS Pinata deploy GitHub action
        uses: decent-dao/ipfs-pinata-deploy-action@v2.0.1
        id: upload
        with:
          pin-name: 'app.staging.fractalframework.xyz'
          path: './build'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Convert CIDv0 to CIDv1
        id: convert_cidv0
        uses: decent-dao/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      - name: Update DNS with new IPFS hash
        uses: textileio/cloudflare-update-dnslink@v2
        with:
          cid: ${{ steps.convert_cidv0.outputs.cidv1 }}
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: 'fractalframework.xyz'
          RECORD_NAME: '_dnslink.app.staging'
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
