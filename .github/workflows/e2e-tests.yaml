name: E2E Tests
on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  playwright:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Create env file
        working-directory: ./docker
        run: echo TESTING_ALCHEMY_API_KEY=${{ secrets.TESTING_ALCHEMY_API_KEY }} >> .env.tests.local

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers for blockchain
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-blockchain
          key: ${{ runner.os }}-buildx-blockchain-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-blockchain-

      - name: Build Docker image for blockchain
        uses: docker/build-push-action@v4
        with:
          context: docker/blockchain
          file: docker/blockchain/Dockerfile
          load: true
          tags: blockchain:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-blockchain
          cache-to: type=local,dest=/tmp/.buildx-cache-blockchain,mode=max

      - name: Cache Docker layers for webapp
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-webapp
          key: ${{ runner.os }}-buildx-webapp-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-webapp-

      - name: Build Docker image for webapp
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/webapp/Dockerfile
          load: true
          tags: webapp:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-webapp
          cache-to: type=local,dest=/tmp/.buildx-cache-webapp,mode=max

      - name: Run blockchain container
        run: |
          docker run -d --name blockchain \
            -p 8545:8545 \
            --env-file ./docker/.env.tests.local \
            blockchain:latest

      - name: Run webapp container
        run: |
          docker run -d --name webapp \
            -p 3000:3000 \
            -e NEXT_PUBLIC_TESTING_ENVIROMENT=true \
            -e NEXT_PUBLIC_LOCAL_CHAIN_ID=31337 \
            -e NEXT_PUBLIC_LOCAL_PROVIDER_URL=http://0.0.0.0:8545 \
            webapp:latest

      - name: remove package.json
        run: | 
          rm package.json
          rm package-lock.json
          npm init -y

      - name: Install Node.js dependencies
        run: npm i -D @playwright/test playwright

      - name: Install Playwright Browsers
        run: |
          npx playwright install --with-deps

      - name: Wait for Development Server
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:3000'
          responseCode: 200
          timeout: 300000

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Stop containers
        if: always()
        run: |
          docker stop webapp
          docker rm webapp
          docker stop blockchain
          docker rm blockchain
  
