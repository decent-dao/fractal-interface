{
    "breakdownTitle": "Breakdown",
    "labelTargetAddress": "Target Address",
    "helperTargetAddress": "The smart contract address this proposal will modify",
    "labelFunctionName": "Function Name",
    "helperFunctionName": "The name of the function to be called if this proposal passes",
    "labelFunctionSignature": "Function Signature",
    "helperFunctionSignature": "The function of the smart contract (above) to be called if this proposal passes",
    "labelParameters": "Parameters",
    "helperParameters": "Values used to call the function (comma separated)",
    "pageTitle": "{{daoName}} Proposals",
    "ownerApproved": "Approved",
    "statePending": "Pending",
    "stateModule": "Module",
    "stateActive": "Active",
    "stateCanceled": "Canceled",
    "stateRejected": "Rejected",
    "stateExecuting": "Executable",
    "stateUninitialized": "Uninitialized",
    "stateExecuted": "Executed",
    "stateFailed": "Failed",
    "stateQueued": "Queued",
    "stateTimeLocked": "Queued",
    "stateFreezeInit": "Freeze Initiated",
    "stateFrozen": "Frozen",
    "stateQueueable": "Queueable",
    "stateExpired": "Expired",
    "showExecutableCode": "Show Executable Code",
    "hideExecutableCode": "Hide Executable Code",
    "noProposal": "No proposal found",
    "emptyProposals": "No proposals found",
    "createProposal": "Create Proposal",
    "labelAddTransaction": "+ Add Transaction",
    "buttonDelegate": "Delegate",
    "errorInvalidFragments": "Invalid function signature",
    "proposalSummaryTitle": "Proposal Details",
    "proposalSummaryStartDate": "Start Date",
    "proposalSummaryEndDate": "End Date",
    "proposalSupportSummaryHelper": "Minimum {{count}}% support required",
    "proposalQuorumSummaryHelper": "Minimum {{count}}% required",
    "proposedBy": "Proposed by",
    "proposalTitle_one": "Proposal to execute {{count}} transaction on {{target}}",
    "proposalTitle_other": "Proposal to execute {{count}} transactions on {{target}}",
    "votesTitle": "Votes",
    "signTitle": "Sign Transaction",
    "queueTitle": "Queue Transaction",
    "executeTitle": "Execute Transaction",
    "filterProposalsAllSelected": "All Proposals",
    "filterProposalsNoneSelected": "No Proposals",
    "filterProposalsNSelected": "Filter {{count}}",
    "filter": "Filter",
    "transaction": "Transaction",
    "proposal": "Proposal",
    "transactionExecutionAlertMessage": "Transactions execute in the order they are added",
    "labelProposalVotingPeriod": "Voting Period",
    "labelProposalQuorum": "Quorum",
    "labelProposalTimelock": "Timelock",
    "labelProposalSigners": "Signers",
    "support": "Support",
    "signers": "Signers",
    "txDetailsSignersCurrent": "Current Signatures",
    "txDetailsSignersRequired": "Signers Required",
    "created": "Created",
    "transactionHash": "Transaction Hash",
    "proposalId": "Proposal Id",
    "pendingSign": "Use wallet to sign transaction",
    "failedSign": "Signing failed",
    "successSign": "Signing successful",
    "proposalCreatePendingToastMessage": "Creating new proposal",
    "proposalCreateSuccessToastMessage": "Proposal successfully created",
    "proposalCreateFailureToastMessage": "Proposal creation failed"
}