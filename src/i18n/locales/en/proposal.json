{
    "breakdownTitle": "Breakdown",
    "labelTargetAddress": "Target Address",
    "helperTargetAddress": "The smart contract address this proposal will modify",
    "labelFunctionName": "Function Name",
    "helperFunctionName": "The name of the function to be called if this proposal passes",
    "labelFunctionSignature": "Function Signature",
    "helperFunctionSignature": "The parameter types of the function (above) to be called",
    "labelParameters": "Parameters",
    "helperParameters": "Parameters used to call the function (comma separated)",
    "labelEthValue": "ETH Value",
    "helperEthValue": "Amount of ETH to send with the transaction (from your treasury)",
    "pageTitle": "{{daoName}} Proposals",
    "ownerApproved": "Approved",
    "stateModule": "Module",
    "stateModuleTip": "This transaction was executed by a Safe module.",
    "stateActive": "Active",
    "stateActiveTip": "The proposal can be voted on. This is the initial state of all newly created proposals.",
    "stateCanceled": "Canceled",
    "stateCanceledTip": "The proposal was canceled by a function call on the Azorius contract.",
    "stateRejected": "Rejected",
    "stateRejectedTip": "The proposal failed due to another proposal being executed with the same nonce.",
    "stateExecuting": "Executable",
    "stateExecutingTip": "The proposal is now able to be executed by anyone.",
    "stateUninitialized": "Uninitialized",
    "stateUninitializedTip": "There is no voting strategy associated with the proposal.",
    "stateExecuted": "Executed",
    "stateExecutedTip": "The proposal has been executed.",
    "stateFailed": "Failed",
    "stateFailedTip": "The proposal failed to achieve quorum or did not get enough votes to pass.",
    "stateQueued": "Queued",
    "stateTimeLocked": "Queued",
    "stateQueuedTip": "The proposal has passed, but cannot yet be executed until its queue period has ended.",
    "stateFreezeInit": "Freeze Pending",
    "stateFreezeInitTip": "The parent has initiated a vote to potentially freeze this DAO.",
    "stateFrozen": "Frozen",
    "stateFrozenTip": "The parent has voted to freeze this DAO.",
    "stateQueueable": "Queueable",
    "stateQueueableTip": "The proposal can now be queued for execution by anyone.",
    "stateExpired": "Expired",
    "stateExpiredTip": "The proposal passed but was not executed before the execution period ended.",
    "showExecutableCode": "Show Executable Code",
    "hideExecutableCode": "Hide Executable Code",
    "noProposal": "No proposal found",
    "emptyProposals": "No proposals found",
    "createProposal": "Create Proposal",
    "labelAddTransaction": "+ Add Transaction",
    "buttonDelegate": "Delegate tokens",
    "errorInvalidFragments": "Invalid function signature",
    "proposalSummaryTitle": "Proposal Details",
    "proposalSummaryStartDate": "Start Date",
    "proposalSummaryEndDate": "End Date",
    "proposalSupportSummaryHelper": "Minimum {{count}}% support required",
    "proposedBy": "Proposed by",
    "proposalTitle_one": "Proposal to execute {{count}} transaction on {{target}}",
    "proposalTitle_other": "Proposal to execute {{count}} transactions on {{target}}",
    "proposalTitle": "Proposal Title",
    "proposalTitleHelper": "A short title for this proposal",
    "proposalTitlePlaceholder": "A new proposal",
    "proposalDescription": "Proposal Description",
    "proposalDescriptionHelper": "Add a brief description",
    "proposalDescriptionPlaceholder": "A brief description",
    "proposalAdditionalResources": "Additional Resources",
    "proposalAdditionalResourcesHelper": "A link to any discussion or formal documentation",
    "proposalAdditionalResourcesPlaceholder": "https://",
    "votesTitle": "Votes",
    "signTitle": "Sign Transaction",
    "queueTitle": "Queue Transaction",
    "executeTitle": "Execute Transaction",
    "filterProposalsAllSelected": "All Proposals",
    "filterProposalsNoneSelected": "No Proposals",
    "filterProposalsNSelected": "Filter {{count}}",
    "filter": "Filter",
    "transaction": "Transaction",
    "proposal": "Proposal",
    "transactionExecutionAlertMessage": "Transactions execute in the order they are added",
    "labelProposalVotingPeriod": "Voting Period",
    "labelProposalQuorum": "Quorum",
    "labelProposalTimelock": "Queue",
    "labelProposalSigners": "Signers",
    "support": "Support",
    "signers": "Signers",
    "txDetailsSignersCurrent": "Current Signatures",
    "txDetailsSignersRequired": "Signers Required",
    "created": "Created",
    "transactionHash": "Transaction Hash",
    "proposalId": "Proposal Id",
    "pendingSign": "Use wallet to sign transaction",
    "failedSign": "Signing failed",
    "successSign": "Signing successful",
    "proposalCreatePendingToastMessage": "Creating new proposal",
    "proposalCreateSuccessToastMessage": "Proposal successfully created",
    "proposalCreateFailureToastMessage": "Proposal creation failed",
    "paramTarget": "target",
    "paramFunction": "function",
    "paramTypes": "parameter types",
    "paramInputs": "parameter inputs",
    "paramValue": "transaction value",
    "decodingFailedMessage": "Unable to decode transaction's data.",
    "customNonce": "Custom Nonce",
    "customNonceTooltip": "Set a custom proposal nonce if necessary to prevent nonce collisions",
    "nonce": "Nonce",
    "votingTooltip": "Time remaining to cast your vote.",
    "timeLockedTooltip": "This proposal can be executed once its queue period has passed.",
    "executableTooltip": "Time remaining to execute this proposal",
    "learnMore": "Learn More",
    "clawBackPendingToastMessage": "Creating clawback proposal",
    "clawBackSuccessToastMessage": "Clawback proposal successfully created",
    "clawBackFailedToastMessage": "Error creating clawback proposal",
    "proposalStartBlockNotFinalized": "You can't vote right now as proposal's start block not yet finalized.",
    "currentUserAlreadyVoted": "Seems like you already casted your vote. Check the votes summary",
    "customNonceError": "The nonce you entered is lower than the Safe's current nonce.",
    "noTimeDifference": "0 seconds",
    "errorInvalidURL": "Invalid URL",
    "functionNameError": "The function name can contain only numbers and letters.",
    "labelOrValueRequired": "Parameter Label or Parameter Value is required"
}