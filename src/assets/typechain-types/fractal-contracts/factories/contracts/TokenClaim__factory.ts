/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenClaim,
  TokenClaimInterface,
} from "../../contracts/TokenClaim";

const _abi = [
  {
    inputs: [],
    name: "AllocationClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAllocation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "parentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "childToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parentAllocation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "TokenClaimCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "childToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "claimToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapShotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac0007de11610071578063ac0007de1461011f578063c884ef8314610132578063d5a2384314610165578063dde070e81461017c578063e70e3cec1461018f578063f2fde38b1461019857600080fd5b806332f289cf146100ae578063715018a6146100c357806380a54001146100cb5780638da5cb5b146100fb578063a4f9edbf1461010c575b600080fd5b6100c16100bc366004610a8c565b6101ab565b005b6100c161025a565b6066546100de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6033546001600160a01b03166100de565b6100c161011a366004610abf565b61026e565b6065546100de906001600160a01b031681565b610155610140366004610a8c565b60696020526000908152604090205460ff1681565b60405190151581526020016100f2565b61016e60675481565b6040519081526020016100f2565b61016e61018a366004610a8c565b610514565b61016e60685481565b6100c16101a6366004610a8c565b610647565b60006101b682610514565b9050806000036101d957604051632fc532ad60e11b815260040160405180910390fd5b6001600160a01b038083166000908152606960205260409020805460ff1916600117905560655461020c911683836106c0565b6065546066546040518381526001600160a01b038581169381169216907f917cf56f6f2280df7b3c3eb8338362e11cf2158bceec528e1172f3af2537f6239060200160405180910390a45050565b610262610717565b61026c6000610771565b565b600054610100900460ff161580801561028e5750600054600160ff909116105b806102a85750303b1580156102a8575060005460ff166001145b6103105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610333576000805461ff0019166101001790555b61033b6107c3565b600080600080858060200190518101906103559190610b70565b606580546001600160a01b038085166001600160a01b03199283161790925560668054928616929091168217905560688290556040805163d1dc72a360e01b8152905195995093975091955093509163d1dc72a39160048082019260209290919082900301816000875af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190610bc3565b6067556040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018390528316906323b872dd906064016020604051808303816000875af115801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190610bdc565b50606754604080516001600160a01b038681168252851660208201528082018490526060810192909252517f15c1b349db6d427f1c82b23bd97a6d4b1ffbd2c92f6552486451d6437f6e19c99181900360800190a1505050508015610510576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03811660009081526069602052604081205460ff1661063e57606654606754604051630981b24d60e41b81526001600160a01b039092169163981b24d0916105699160040190815260200190565b602060405180830381865afa158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610bc3565b60685460665460675460405163277166bf60e11b81526001600160a01b0387811660048301526024820192909252911690634ee2cd7e90604401602060405180830381865afa158015610601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106259190610bc3565b61062f9190610bfe565b6106399190610c2b565b610641565b60005b92915050565b61064f610717565b6001600160a01b0381166106b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610307565b6106bd81610771565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107129084906107f2565b505050565b6033546001600160a01b0316331461026c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610307565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107ea5760405162461bcd60e51b815260040161030790610c4d565b61026c6108c4565b6000610847826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108f49092919063ffffffff16565b80519091501561071257808060200190518101906108659190610bdc565b6107125760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610307565b600054610100900460ff166108eb5760405162461bcd60e51b815260040161030790610c4d565b61026c33610771565b6060610903848460008561090d565b90505b9392505050565b60608247101561096e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610307565b6001600160a01b0385163b6109c55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610307565b600080866001600160a01b031685876040516109e19190610cc8565b60006040518083038185875af1925050503d8060008114610a1e576040519150601f19603f3d011682016040523d82523d6000602084013e610a23565b606091505b5091509150610a33828286610a3e565b979650505050505050565b60608315610a4d575081610906565b825115610a5d5782518084602001fd5b8160405162461bcd60e51b81526004016103079190610ce4565b6001600160a01b03811681146106bd57600080fd5b600060208284031215610a9e57600080fd5b813561090681610a77565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ad157600080fd5b813567ffffffffffffffff80821115610ae957600080fd5b818401915084601f830112610afd57600080fd5b813581811115610b0f57610b0f610aa9565b604051601f8201601f19908116603f01168101908382118183101715610b3757610b37610aa9565b81604052828152876020848701011115610b5057600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060008060808587031215610b8657600080fd5b8451610b9181610a77565b6020860151909450610ba281610a77565b6040860151909350610bb381610a77565b6060959095015193969295505050565b600060208284031215610bd557600080fd5b5051919050565b600060208284031215610bee57600080fd5b8151801515811461090657600080fd5b6000816000190483118215151615610c2657634e487b7160e01b600052601160045260246000fd5b500290565b600082610c4857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610cb3578181015183820152602001610c9b565b83811115610cc2576000848401525b50505050565b60008251610cda818460208701610c98565b9190910192915050565b6020815260008251806020840152610d03816040850160208701610c98565b601f01601f1916919091016040019291505056fea26469706673582212204374767f1b82b516c024f77c280e1328dfcfa616bb40794e2f8db53340bcc5a664736f6c634300080d0033";

type TokenClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenClaim__factory extends ContractFactory {
  constructor(...args: TokenClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenClaim> {
    return super.deploy(overrides || {}) as Promise<TokenClaim>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenClaim {
    return super.attach(address) as TokenClaim;
  }
  override connect(signer: Signer): TokenClaim__factory {
    return super.connect(signer) as TokenClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenClaimInterface {
    return new utils.Interface(_abi) as TokenClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenClaim {
    return new Contract(address, _abi, signerOrProvider) as TokenClaim;
  }
}
