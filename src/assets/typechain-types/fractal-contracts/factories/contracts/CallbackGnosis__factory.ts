/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CallbackGnosis,
  CallbackGnosisInterface,
} from "../../contracts/CallbackGnosis";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_txs",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    name: "multiTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proxyCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631e52b5181461003b578063513aea2314610050575b600080fd5b61004e6100493660046103d6565b610063565b005b61004e61005e3660046105e4565b61015f565b600080610072848601866106b6565b9150915060008060008480602001905181019061008f91906108f2565b92509250925060005b8351811015610152578181815181106100b3576100b3610a4b565b602002602001015115610103576100fe8482815181106100d5576100d5610a4b565b60200260200101518483815181106100ef576100ef610a4b565b60200260200101518d88610289565b610140565b61014084828151811061011857610118610a4b565b602002602001015184838151811061013257610132610a4b565b60200260200101518d61015f565b8061014a81610a61565b915050610098565b5050505050505050505050565b60005b8351811015610283576000806001600160a01b031685838151811061018957610189610a4b565b60200260200101516001600160a01b0316146101be578482815181106101b1576101b1610a4b565b60200260200101516101c0565b825b6001600160a01b03168483815181106101db576101db610a4b565b60200260200101516040516101f09190610a88565b6000604051808303816000865af19150503d806000811461022d576040519150601f19603f3d011682016040523d82523d6000602084013e610232565b606091505b50509050806102705760405162461bcd60e51b8152602060048201526005602482015264434230303160d81b60448201526064015b60405180910390fd5b508061027b81610a61565b915050610162565b50505050565b6000826001600160a01b03163060008787876040516024016102ad93929190610ad0565b60408051601f198184030181529181526020820180516001600160e01b031663513aea2360e01b179052516102f79392919060019060009081908190819081908d90602401610b87565b60408051601f198184030181529181526020820180516001600160e01b031663353b090160e11b1790525161032c9190610a88565b6000604051808303816000865af19150503d8060008114610369576040519150601f19603f3d011682016040523d82523d6000602084013e61036e565b606091505b50509050806103a75760405162461bcd60e51b8152602060048201526005602482015264043423030360dc1b6044820152606401610267565b5050505050565b6001600160a01b03811681146103c357600080fd5b50565b80356103d1816103ae565b919050565b6000806000806000608086880312156103ee57600080fd5b85356103f9816103ae565b94506020860135610409816103ae565b9350604086013567ffffffffffffffff8082111561042657600080fd5b818801915088601f83011261043a57600080fd5b81358181111561044957600080fd5b89602082850101111561045b57600080fd5b96999598505060200195606001359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104af576104af610470565b604052919050565b600067ffffffffffffffff8211156104d1576104d1610470565b5060051b60200190565b600067ffffffffffffffff8211156104f5576104f5610470565b50601f01601f191660200190565b600082601f83011261051457600080fd5b8135610527610522826104db565b610486565b81815284602083860101111561053c57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261056a57600080fd5b8135602061057a610522836104b7565b82815260059290921b8401810191818101908684111561059957600080fd5b8286015b848110156105d957803567ffffffffffffffff8111156105bd5760008081fd5b6105cb8986838b0101610503565b84525091830191830161059d565b509695505050505050565b6000806000606084860312156105f957600080fd5b833567ffffffffffffffff8082111561061157600080fd5b818601915086601f83011261062557600080fd5b81356020610635610522836104b7565b82815260059290921b8401810191818101908a84111561065457600080fd5b948201945b8386101561067b57853561066c816103ae565b82529482019490820190610659565b9750508701359250508082111561069157600080fd5b5061069e86828701610559565b9250506106ad604085016103c6565b90509250925092565b600080604083850312156106c957600080fd5b823567ffffffffffffffff808211156106e157600080fd5b6106ed86838701610503565b9350602085013591508082111561070357600080fd5b5061071085828601610503565b9150509250929050565b60005b8381101561073557818101518382015260200161071d565b838111156102835750506000910152565b600082601f83011261075757600080fd5b8151610765610522826104b7565b8082825260208201915060208360051b86010192508583111561078757600080fd5b602085015b8381101561087e57805167ffffffffffffffff808211156107ac57600080fd5b818801915088603f8301126107c057600080fd5b60208201516107d1610522826104b7565b81815260059190911b83016040019060208101908b8311156107f257600080fd5b604085015b838110156108665780518581111561080e57600080fd5b8601605f81018e1361081f57600080fd5b6040810151610830610522826104db565b8181528f606083850101111561084557600080fd5b61085682602083016060860161071a565b85525050602092830192016107f7565b508752505060209485019492909201915061078c9050565b5095945050505050565b600082601f83011261089957600080fd5b815160206108a9610522836104b7565b82815260059290921b840181019181810190868411156108c857600080fd5b8286015b848110156105d957805180151581146108e55760008081fd5b83529183019183016108cc565b60008060006060848603121561090757600080fd5b835167ffffffffffffffff8082111561091f57600080fd5b818601915086601f83011261093357600080fd5b81516020610943610522836104b7565b82815260059290921b8401810191818101908a84111561096257600080fd5b8286015b848110156109f85780518681111561097d57600080fd5b8701603f81018d1361098e57600080fd5b8481015161099e610522826104b7565b81815260059190911b820160400190868101908f8311156109bf5760008081fd5b6040840193505b828410156109e85783516109d9816103ae565b825292870192908701906109c6565b8652505050918301918301610966565b5091890151919750909350505080821115610a1257600080fd5b610a1e87838801610746565b93506040860151915080821115610a3457600080fd5b50610a4186828701610888565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610a8157634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251610a9a81846020870161071a565b9190910192915050565b60008151808452610abc81602086016020860161071a565b601f01601f19169290920160200192915050565b606080825284519082018190526000906020906080840190828801845b82811015610b125781516001600160a01b031684529284019290840190600101610aed565b50505083810382850152855180825282820190600581901b8301840188850160005b83811015610b6257601f19868403018552610b50838351610aa4565b94870194925090860190600101610b34565b50506001600160a01b03881660408801529450610b7f9350505050565b949350505050565b6001600160a01b038b8116825260ff8b16602083015261014060408301819052600091610bb68483018d610aa4565b60ff8c811660608701528b811660808701528a811660a0870152891660c086015287821660e08601529086166101008501528381036101208501529050610bfd8185610aa4565b9d9c5050505050505050505050505056fea2646970667358221220d8868ec1f91d24429e1941345634f612252d43f1bb115f5e7d12c79fa4cc5d1864736f6c634300080d0033";

type CallbackGnosisConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallbackGnosisConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallbackGnosis__factory extends ContractFactory {
  constructor(...args: CallbackGnosisConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallbackGnosis> {
    return super.deploy(overrides || {}) as Promise<CallbackGnosis>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CallbackGnosis {
    return super.attach(address) as CallbackGnosis;
  }
  override connect(signer: Signer): CallbackGnosis__factory {
    return super.connect(signer) as CallbackGnosis__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallbackGnosisInterface {
    return new utils.Interface(_abi) as CallbackGnosisInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallbackGnosis {
    return new Contract(address, _abi, signerOrProvider) as CallbackGnosis;
  }
}
