/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VetoGuard, VetoGuardInterface } from "../../contracts/VetoGuard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queuer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "signatures",
        type: "bytes",
      },
    ],
    name: "TransactionQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executionDelayBlocks",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vetoERC20Voting",
        type: "address",
      },
    ],
    name: "VetoGuardSetup",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "safeTxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executionDelayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "safeTxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionHash",
        type: "bytes32",
      },
    ],
    name: "getTransactionQueuedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gnosisSafe",
    outputs: [
      {
        internalType: "contract IGnosisSafe",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "safeTxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signatures",
        type: "bytes",
      },
    ],
    name: "queueTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vetoERC20Voting",
    outputs: [
      {
        internalType: "contract IVetoERC20Voting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112df806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063932713681161008c578063b59ee1db11610066578063b59ee1db146101ae578063c92422a3146101ce578063f2fde38b146101d7578063fde95969146101ea57600080fd5b80639327136814610176578063a4f9edbf14610188578063a84173ae1461019b57600080fd5b806301ffc9a7146100d45780631ce2357e146100fc57806365d5d08c14610127578063715018a61461014857806375f0bb52146101525780638da5cb5b14610165575b600080fd5b6100e76100e2366004610ae4565b6101fd565b60405190151581526020015b60405180910390f35b60665461010f906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b61013a610135366004610c0e565b610228565b6040519081526020016100f3565b610150610277565b005b610150610160366004610cbd565b61028b565b6033546001600160a01b031661010f565b610150610184366004610db0565b5050565b610150610196366004610de0565b610520565b60675461010f906001600160a01b031681565b61013a6101bc366004610e1d565b60009081526068602052604090205490565b61013a60655481565b6101506101e5366004610e36565b6106f2565b6101506101f8366004610e53565b61076b565b60006001600160e01b0319821663243bdc5960e11b14806102225750610222826109a9565b92915050565b60008989898051906020012089898989898960405160200161025299989796959493929190610f44565b6040516020818303038152906040528051906020012090509998505050505050505050565b61027f6109de565b6102896000610a38565b565b600061029e8c8c8c8c8c8c8c8c8c610228565b6000818152606860205260408120549192500361030e5760405162461bcd60e51b815260206004820152602360248201527f5472616e73616374696f6e20686173206e6f74206265656e20717565756564206044820152621e595d60ea1b60648201526084015b60405180910390fd5b60655460008281526068602052604090205461032a9190610fa4565b4310156103905760405162461bcd60e51b815260206004820152602e60248201527f5472616e73616374696f6e2064656c617920706572696f6420686173206e6f7460448201526d0818dbdb5c1b195d1959081e595d60921b6064820152608401610305565b6066546040516391775ec560e01b81526001600160a01b03909116906391775ec5906103d0908f908f908f908f908f908f908f908f908f90600401611026565b602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104119190611095565b1561045e5760405162461bcd60e51b815260206004820152601b60248201527f5472616e73616374696f6e20686173206265656e207665746f656400000000006044820152606401610305565b606660009054906101000a90046001600160a01b03166001600160a01b03166333eeb1476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190611095565b156105125760405162461bcd60e51b815260206004820152600d60248201526c2220a79034b990333937bd32b760991b6044820152606401610305565b505050505050505050505050565b600054610100900460ff16158080156105405750600054600160ff909116105b8061055a5750303b15801561055a575060005460ff166001145b6105bd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610305565b6000805460ff1916600117905580156105e0576000805461ff0019166101001790555b6105e8610a8a565b6000806000808580602001905181019061060291906110b2565b93509350935093508360658190555061061a836106f2565b606680546001600160a01b0319166001600160a01b03848116919091179091558116156106475780610649565b335b606780546001600160a01b0319166001600160a01b039283161790556040805133815260208101879052848316928616917f0b3fefe2aeaa1db4438b4c73958a74bcf79a95fb7ebb4a12246e98fc99191358910160405180910390a3505050508015610184576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6106fa6109de565b6001600160a01b03811661075f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610305565b61076881610a38565b50565b600061077e8b8b8b8b8b8b8b8b8b610228565b600081815260686020526040902054909150156107e95760405162461bcd60e51b815260206004820152602360248201527f5472616e73616374696f6e2068617320616c7265616479206265656e207175656044820152621d595960ea1b6064820152608401610305565b6067546040805163057ff68760e51b815290516000926001600160a01b03169163e86637db918f918f918f918f918f918f918f918f918f918c9163affed0e0916004808201926020929091908290030181865afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190611107565b6040518b63ffffffff1660e01b81526004016108979a99989796959493929190611120565b600060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108dc9190810190611196565b6067548151602083012060405163934f3a1160e01b81529293506001600160a01b039091169163934f3a1191610918918590889060040161120d565b60006040518083038186803b15801561093057600080fd5b505afa158015610944573d6000803e3d6000fd5b505050600083815260686020526040908190204390555161096791508490611242565b60405190819003812090839033907feee518afd7ded3634c76d99045925e4498b45ff00555847a227358b9420b317490600090a4505050505050505050505050565b60006001600160e01b0319821663736bd41d60e11b148061022257506301ffc9a760e01b6001600160e01b0319831614610222565b6033546001600160a01b031633146102895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610305565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ab15760405162461bcd60e51b81526004016103059061125e565b610289600054610100900460ff16610adb5760405162461bcd60e51b81526004016103059061125e565b61028933610a38565b600060208284031215610af657600080fd5b81356001600160e01b031981168114610b0e57600080fd5b9392505050565b6001600160a01b038116811461076857600080fd5b8035610b3581610b15565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b7957610b79610b3a565b604052919050565b600067ffffffffffffffff821115610b9b57610b9b610b3a565b50601f01601f191660200190565b600082601f830112610bba57600080fd5b8135610bcd610bc882610b81565b610b50565b818152846020838601011115610be257600080fd5b816020850160208301376000918101602001919091529392505050565b803560028110610b3557600080fd5b60008060008060008060008060006101208a8c031215610c2d57600080fd5b8935610c3881610b15565b985060208a0135975060408a013567ffffffffffffffff811115610c5b57600080fd5b610c678c828d01610ba9565b975050610c7660608b01610bff565b955060808a0135945060a08a0135935060c08a0135925060e08a0135610c9b81610b15565b91506101008a0135610cac81610b15565b809150509295985092959850929598565b60008060008060008060008060008060006101608c8e031215610cdf57600080fd5b610ce88c610b2a565b9a5060208c0135995067ffffffffffffffff8060408e01351115610d0b57600080fd5b610d1b8e60408f01358f01610ba9565b9950610d2960608e01610bff565b985060808d0135975060a08d0135965060c08d01359550610d4c60e08e01610b2a565b9450610d5b6101008e01610b2a565b9350806101208e01351115610d6f57600080fd5b50610d818d6101208e01358e01610ba9565b9150610d906101408d01610b2a565b90509295989b509295989b9093969950565b801515811461076857600080fd5b60008060408385031215610dc357600080fd5b823591506020830135610dd581610da2565b809150509250929050565b600060208284031215610df257600080fd5b813567ffffffffffffffff811115610e0957600080fd5b610e1584828501610ba9565b949350505050565b600060208284031215610e2f57600080fd5b5035919050565b600060208284031215610e4857600080fd5b8135610b0e81610b15565b6000806000806000806000806000806101408b8d031215610e7357600080fd5b610e7c8b610b2a565b995060208b0135985060408b013567ffffffffffffffff80821115610ea057600080fd5b610eac8e838f01610ba9565b9950610eba60608e01610bff565b985060808d0135975060a08d0135965060c08d01359550610edd60e08e01610b2a565b9450610eec6101008e01610b2a565b93506101208d0135915080821115610f0357600080fd5b50610f108d828e01610ba9565b9150509295989b9194979a5092959850565b60028110610f4057634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038a81168252602082018a905260408201899052610120820190610f72606084018a610f22565b8760808401528660a08401528560c084015280851660e0840152808416610100840152509a9950505050505050505050565b60008219821115610fc557634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015610fe5578181015183820152602001610fcd565b83811115610ff4576000848401525b50505050565b60008151808452611012816020860160208601610fca565b601f01601f19169290920160200192915050565b6001600160a01b038a81168252602082018a9052610120604083018190526000916110538483018c610ffa565b9250611062606085018b610f22565b8860808501528760a08501528660c085015280861660e085015280851661010085015250509a9950505050505050505050565b6000602082840312156110a757600080fd5b8151610b0e81610da2565b600080600080608085870312156110c857600080fd5b8451935060208501516110da81610b15565b60408601519093506110eb81610b15565b60608601519092506110fc81610b15565b939692955090935050565b60006020828403121561111957600080fd5b5051919050565b6001600160a01b038b81168252602082018b90526101406040830181905260009161114d8483018d610ffa565b925061115c606085018c610f22565b60808401999099525060a082019690965260c081019490945291851660e08401529093166101008201526101200191909152949350505050565b6000602082840312156111a857600080fd5b815167ffffffffffffffff8111156111bf57600080fd5b8201601f810184136111d057600080fd5b80516111de610bc882610b81565b8181528560208385010111156111f357600080fd5b611204826020830160208601610fca565b95945050505050565b8381526060602082015260006112266060830185610ffa565b82810360408401526112388185610ffa565b9695505050505050565b60008251611254818460208701610fca565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220f6d07f2bb28842378afdcbe65d8b221f39282ef7532837ad4ab21e8ff11a74a164736f6c634300080d0033";

type VetoGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VetoGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VetoGuard__factory extends ContractFactory {
  constructor(...args: VetoGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VetoGuard> {
    return super.deploy(overrides || {}) as Promise<VetoGuard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VetoGuard {
    return super.attach(address) as VetoGuard;
  }
  override connect(signer: Signer): VetoGuard__factory {
    return super.connect(signer) as VetoGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VetoGuardInterface {
    return new utils.Interface(_abi) as VetoGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VetoGuard {
    return new Contract(address, _abi, signerOrProvider) as VetoGuard;
  }
}
