/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VotesToken,
  VotesTokenInterface,
} from "../../contracts/VotesToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "captureSnapShot",
    outputs: [
      {
        internalType: "uint256",
        name: "snapId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506128d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ecebe0011610104578063a4f9edbf116100a2578063d505accf11610071578063d505accf14610410578063dd62ed3e14610423578063f1127ed814610436578063f2fde38b1461047357600080fd5b8063a4f9edbf146103cf578063a9059cbb146103e2578063c3cda520146103f5578063d1dc72a31461040857600080fd5b806395d89b41116100de57806395d89b411461038e578063981b24d0146103965780639ab24eb0146103a9578063a457c2d7146103bc57600080fd5b80637ecebe00146103565780638da5cb5b146103695780638e539e8c1461037b57600080fd5b8063395093511161017c5780635c19a95c1161014b5780635c19a95c146102e85780636fcfff45146102fd57806370a0823114610325578063715018a61461034e57600080fd5b8063395093511461026b5780633a46b1a81461027e5780634ee2cd7e14610291578063587cde1e146102a457600080fd5b806318160ddd116101b857806318160ddd1461022f57806323b872dd14610241578063313ce567146102545780633644e5151461026357600080fd5b806301ffc9a7146101df57806306fdde0314610207578063095ea7b31461021c575b600080fd5b6101f26101ed366004612222565b610486565b60405190151581526020015b60405180910390f35b61020f6104c7565b6040516101fe9190612278565b6101f261022a3660046122c0565b610559565b6035545b6040519081526020016101fe565b6101f261024f3660046122ec565b610571565b604051601281526020016101fe565b610233610595565b6101f26102793660046122c0565b6105a4565b61023361028c3660046122c0565b6105c6565b61023361029f3660046122c0565b610645565b6102d06102b236600461232d565b6001600160a01b03908116600090815260fe60205260409020541690565b6040516001600160a01b0390911681526020016101fe565b6102fb6102f636600461232d565b61069e565b005b61031061030b36600461232d565b6106ab565b60405163ffffffff90911681526020016101fe565b61023361033336600461232d565b6001600160a01b031660009081526033602052604090205490565b6102fb6106cd565b61023361036436600461232d565b6106e1565b610131546001600160a01b03166102d0565b61023361038936600461234a565b6106ff565b61020f61075c565b6102336103a436600461234a565b61076b565b6102336103b736600461232d565b610796565b6101f26103ca3660046122c0565b61081d565b6102fb6103dd3660046123d2565b610898565b6101f26103f03660046122c0565b610a46565b6102fb610403366004612463565b610a54565b610233610b8a565b6102fb61041e3660046124bd565b610b94565b61023361043136600461252b565b610cf8565b610449610444366004612564565b610d23565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101fe565b6102fb61048136600461232d565b610da7565b60006301ffc9a760e01b6001600160e01b0319831614806104c157506001600160e01b031982166000908152610130602052604090205460ff165b92915050565b6060603680546104d69061259b565b80601f01602080910402602001604051908101604052809291908181526020018280546105029061259b565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050905090565b600033610567818585610e1d565b5060019392505050565b60003361057f858285610f41565b61058a858585610fbb565b506001949350505050565b600061059f61119a565b905090565b6000336105678185856105b78383610cf8565b6105c191906125e5565b610e1d565b600043821061061c5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260ff6020526040902061063e9083611215565b9392505050565b6001600160a01b03821660009081526065602052604081208190819061066c9085906112d2565b9150915081610693576001600160a01b038516600090815260336020526040902054610695565b805b95945050505050565b6106a833826113c8565b50565b6001600160a01b038116600090815260ff60205260408120546104c190611442565b6106d56114ab565b6106df6000611506565b565b6001600160a01b038116600090815260cb60205260408120546104c1565b60004382106107505760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610613565b6104c161010083611215565b6060603780546104d69061259b565b600080600061077b8460666112d2565b915091508161078c5760355461078e565b805b949350505050565b6001600160a01b038116600090815260ff6020526040812054801561080a576001600160a01b038316600090815260ff602052604090206107d86001836125fd565b815481106107e8576107e8612614565b60009182526020909120015464010000000090046001600160e01b031661080d565b60005b6001600160e01b03169392505050565b6000338161082b8286610cf8565b90508381101561088b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610613565b61058a8286868403610e1d565b600054610100900460ff16158080156108b85750600054600160ff909116105b806108d25750303b1580156108d2575060005460ff166001145b6109355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610613565b6000805460ff191660011790558015610958576000805461ff0019166101001790555b6000806000808580602001905181019061097291906126f9565b93509350935093506109848484611559565b61098d8461158a565b61099d6336372b0760e01b6115d4565b60005b82518110156109f7576109e58382815181106109be576109be612614565b60200260200101518383815181106109d8576109d8612614565b6020026020010151611654565b806109ef81612803565b9150506109a0565b50505050508015610a42576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600033610567818585610fbb565b83421115610aa45760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610613565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610b1e90610b169060a0016040516020818303038152906040528051906020012061165e565b8585856116ac565b9050610b29816116d4565b8614610b775760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610613565b610b8181886113c8565b50505050505050565b600061059f6116fc565b83421115610be45760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610613565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c138c6116d4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c6e8261165e565b90506000610c7e828787876116ac565b9050896001600160a01b0316816001600160a01b031614610ce15760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610613565b610cec8a8a8a610e1d565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815260ff60205260409020805463ffffffff8416908110610d6757610d67612614565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610daf6114ab565b6001600160a01b038116610e145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610613565b6106a881611506565b6001600160a01b038316610e7f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610613565b6001600160a01b038216610ee05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610613565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f4d8484610cf8565b90506000198114610fb55781811015610fa85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610613565b610fb58484848403610e1d565b50505050565b6001600160a01b03831661101f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610613565b6001600160a01b0382166110815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610613565b61108c838383611756565b6001600160a01b038316600090815260336020526040902054818110156111045760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610613565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061113b9084906125e5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161118791815260200190565b60405180910390a3610fb5848484611766565b600061059f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111c960975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156112795760006112308284611771565b90508486828154811061124557611245612614565b60009182526020909120015463ffffffff16111561126557809250611273565b6112708160016125e5565b91505b5061121c565b81156112bd578461128b6001846125fd565b8154811061129b5761129b612614565b60009182526020909120015464010000000090046001600160e01b03166112c0565b60005b6001600160e01b031695945050505050565b6000806000841161131e5760405162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b6044820152606401610613565b61132661178c565b8411156113755760405162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e742069640000006044820152606401610613565b60006113818486611797565b845490915081036113995760008092509250506113c1565b60018460010182815481106113b0576113b0612614565b906000526020600020015492509250505b9250929050565b6001600160a01b03828116600081815260fe6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610fb582848361185c565b600063ffffffff8211156114a75760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610613565b5090565b610131546001600160a01b031633146106df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610613565b61013180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166115805760405162461bcd60e51b81526004016106139061281c565b610a428282611999565b600054610100900460ff166115b15760405162461bcd60e51b81526004016106139061281c565b6106a881604051806040016040528060018152602001603160f81b8152506119e7565b6001600160e01b0319808216900361162e5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610613565b6001600160e01b031916600090815261013060205260409020805460ff19166001179055565b610a428282611a28565b60006104c161166b61119a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006116bd87878787611ab3565b915091506116ca81611ba0565b5095945050505050565b6001600160a01b038116600090815260cb602052604090208054600181018255905b50919050565b600061170c606880546001019055565b600061171661178c565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb678160405161174991815260200190565b60405180910390a1919050565b611761838383611d56565b505050565b611761838383611d9e565b60006117806002848418612867565b61063e908484166125e5565b600061059f60685490565b815460009081036117aa575060006104c1565b82546000905b808210156118065760006117c48383611771565b9050848682815481106117d9576117d9612614565b906000526020600020015411156117f257809150611800565b6117fd8160016125e5565b92505b506117b0565b60008211801561183b5750838561181e6001856125fd565b8154811061182e5761182e612614565b9060005260206000200154145b156118545761184b6001836125fd565b925050506104c1565b5090506104c1565b816001600160a01b0316836001600160a01b03161415801561187e5750600081115b15611761576001600160a01b0383161561190c576001600160a01b038316600090815260ff6020526040812081906118b990611dd085611ddc565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611901929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611761576001600160a01b038216600090815260ff60205260408120819061194290611f5585611ddc565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161198a929190918252602082015260400190565b60405180910390a25050505050565b600054610100900460ff166119c05760405162461bcd60e51b81526004016106139061281c565b81516119d3906036906020850190612192565b508051611761906037906020840190612192565b600054610100900460ff16611a0e5760405162461bcd60e51b81526004016106139061281c565b815160209283012081519190920120609791909155609855565b611a328282611f61565b6035546001600160e01b031015611aa45760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610613565b610fb5610100611f5583611ddc565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611aea5750600090506003611b97565b8460ff16601b14158015611b0257508460ff16601c14155b15611b135750600090506004611b97565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b67573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b9057600060019250925050611b97565b9150600090505b94509492505050565b6000816004811115611bb457611bb4612889565b03611bbc5750565b6001816004811115611bd057611bd0612889565b03611c1d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610613565b6002816004811115611c3157611c31612889565b03611c7e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610613565b6003816004811115611c9257611c92612889565b03611cea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610613565b6004816004811115611cfe57611cfe612889565b036106a85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610613565b6001600160a01b038316611d7557611d6d82612054565b611761612087565b6001600160a01b038216611d8c57611d6d83612054565b611d9583612054565b61176182612054565b6001600160a01b03838116600090815260fe60205260408082205485841683529120546117619291821691168361185c565b600061063e82846125fd565b825460009081908015611e275785611df56001836125fd565b81548110611e0557611e05612614565b60009182526020909120015464010000000090046001600160e01b0316611e2a565b60005b6001600160e01b03169250611e4383858763ffffffff16565b9150600081118015611e8157504386611e5d6001846125fd565b81548110611e6d57611e6d612614565b60009182526020909120015463ffffffff16145b15611ee157611e8f82612095565b86611e9b6001846125fd565b81548110611eab57611eab612614565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611f4c565b856040518060400160405280611ef643611442565b63ffffffff168152602001611f0a85612095565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b600061063e82846125e5565b6001600160a01b038216611fb75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610613565b611fc360008383611756565b8060356000828254611fd591906125e5565b90915550506001600160a01b038216600090815260336020526040812080548392906120029084906125e5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610a4260008383611766565b6001600160a01b03811660009081526065602090815260408083206033909252909120546106a891906120fe565b6120fe565b6106df606661208260355490565b60006001600160e01b038211156114a75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610613565b600061210861178c565b90508061211484612148565b1015611761578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090810361215b57506000919050565b8154829061216b906001906125fd565b8154811061217b5761217b612614565b90600052602060002001549050919050565b919050565b82805461219e9061259b565b90600052602060002090601f0160209004810192826121c05760008555612206565b82601f106121d957805160ff1916838001178555612206565b82800160010185558215612206579182015b828111156122065782518255916020019190600101906121eb565b506114a79291505b808211156114a7576000815560010161220e565b60006020828403121561223457600080fd5b81356001600160e01b03198116811461063e57600080fd5b60005b8381101561226757818101518382015260200161224f565b83811115610fb55750506000910152565b602081526000825180602084015261229781604085016020870161224c565b601f01601f19169190910160400192915050565b6001600160a01b03811681146106a857600080fd5b600080604083850312156122d357600080fd5b82356122de816122ab565b946020939093013593505050565b60008060006060848603121561230157600080fd5b833561230c816122ab565b9250602084013561231c816122ab565b929592945050506040919091013590565b60006020828403121561233f57600080fd5b813561063e816122ab565b60006020828403121561235c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156123a2576123a2612363565b604052919050565b600067ffffffffffffffff8211156123c4576123c4612363565b50601f01601f191660200190565b6000602082840312156123e457600080fd5b813567ffffffffffffffff8111156123fb57600080fd5b8201601f8101841361240c57600080fd5b803561241f61241a826123aa565b612379565b81815285602083850101111561243457600080fd5b81602084016020830137600091810160200191909152949350505050565b803560ff8116811461218d57600080fd5b60008060008060008060c0878903121561247c57600080fd5b8635612487816122ab565b955060208701359450604087013593506124a360608801612452565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156124d857600080fd5b87356124e3816122ab565b965060208801356124f3816122ab565b9550604088013594506060880135935061250f60808901612452565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561253e57600080fd5b8235612549816122ab565b91506020830135612559816122ab565b809150509250929050565b6000806040838503121561257757600080fd5b8235612582816122ab565b9150602083013563ffffffff8116811461255957600080fd5b600181811c908216806125af57607f821691505b6020821081036116f657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156125f8576125f86125cf565b500190565b60008282101561260f5761260f6125cf565b500390565b634e487b7160e01b600052603260045260246000fd5b600082601f83011261263b57600080fd5b815161264961241a826123aa565b81815284602083860101111561265e57600080fd5b61069382602083016020870161224c565b600067ffffffffffffffff82111561268957612689612363565b5060051b60200190565b600082601f8301126126a457600080fd5b815160206126b461241a8361266f565b82815260059290921b840181019181810190868411156126d357600080fd5b8286015b848110156126ee57805183529183019183016126d7565b509695505050505050565b6000806000806080858703121561270f57600080fd5b845167ffffffffffffffff8082111561272757600080fd5b6127338883890161262a565b955060209150818701518181111561274a57600080fd5b61275689828a0161262a565b95505060408701518181111561276b57600080fd5b8701601f8101891361277c57600080fd5b805161278a61241a8261266f565b81815260059190911b8201840190848101908b8311156127a957600080fd5b928501925b828410156127d05783516127c1816122ab565b825292850192908501906127ae565b60608b01519097509450505050808211156127ea57600080fd5b506127f787828801612693565b91505092959194509250565b600060018201612815576128156125cf565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261288457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d87610b173eacbcc66328ce19292b3577a375eac8532c799499de8783ba6f0d064736f6c634300080d0033";

type VotesTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotesTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotesToken__factory extends ContractFactory {
  constructor(...args: VotesTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VotesToken> {
    return super.deploy(overrides || {}) as Promise<VotesToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VotesToken {
    return super.attach(address) as VotesToken;
  }
  override connect(signer: Signer): VotesToken__factory {
    return super.connect(signer) as VotesToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotesTokenInterface {
    return new utils.Interface(_abi) as VotesTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotesToken {
    return new Contract(address, _abi, signerOrProvider) as VotesToken;
  }
}
