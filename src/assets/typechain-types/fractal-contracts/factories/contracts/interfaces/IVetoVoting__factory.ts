/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IVetoVoting,
  IVetoVotingInterface,
} from "../../../contracts/interfaces/IVetoVoting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "FreezeProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votesCast",
        type: "uint256",
      },
    ],
    name: "FreezeVoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votesCast",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "freeze",
        type: "bool",
      },
    ],
    name: "VetoVoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "castFreezeVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_freeze",
        type: "bool",
      },
    ],
    name: "castVetoVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionHash",
        type: "bytes32",
      },
    ],
    name: "getIsVetoed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IVetoVoting__factory {
  static readonly abi = _abi;
  static createInterface(): IVetoVotingInterface {
    return new utils.Interface(_abi) as IVetoVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVetoVoting {
    return new Contract(address, _abi, signerOrProvider) as IVetoVoting;
  }
}
