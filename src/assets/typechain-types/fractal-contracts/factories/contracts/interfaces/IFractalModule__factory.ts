/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFractalModule,
  IFractalModuleInterface,
} from "../../../contracts/interfaces/IFractalModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
    ],
    name: "ControllersAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
    ],
    name: "ControllersRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_controllers",
        type: "address[]",
      },
    ],
    name: "addControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "execTxData",
        type: "bytes",
      },
    ],
    name: "execTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_controllers",
        type: "address[]",
      },
    ],
    name: "removeControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFractalModule__factory {
  static readonly abi = _abi;
  static createInterface(): IFractalModuleInterface {
    return new utils.Interface(_abi) as IFractalModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFractalModule {
    return new Contract(address, _abi, signerOrProvider) as IFractalModule;
  }
}
