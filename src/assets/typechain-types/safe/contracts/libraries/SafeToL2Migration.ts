/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface SafeToL2MigrationInterface extends utils.Interface {
  functions: {
    "MIGRATION_SINGLETON()": FunctionFragment;
    "migrateFromV111(address,address)": FunctionFragment;
    "migrateToL2(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "MIGRATION_SINGLETON"
      | "migrateFromV111"
      | "migrateToL2"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MIGRATION_SINGLETON",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "migrateFromV111",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "migrateToL2", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "MIGRATION_SINGLETON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateFromV111",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateToL2",
    data: BytesLike
  ): Result;

  events: {
    "ChangedMasterCopy(address)": EventFragment;
    "SafeMultiSigTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,bytes)": EventFragment;
    "SafeSetup(address,address[],uint256,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangedMasterCopy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SafeMultiSigTransaction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SafeSetup"): EventFragment;
}

export interface ChangedMasterCopyEventObject {
  singleton: string;
}
export type ChangedMasterCopyEvent = TypedEvent<
  [string],
  ChangedMasterCopyEventObject
>;

export type ChangedMasterCopyEventFilter =
  TypedEventFilter<ChangedMasterCopyEvent>;

export interface SafeMultiSigTransactionEventObject {
  to: string;
  value: BigNumber;
  data: string;
  operation: number;
  safeTxGas: BigNumber;
  baseGas: BigNumber;
  gasPrice: BigNumber;
  gasToken: string;
  refundReceiver: string;
  signatures: string;
  additionalInfo: string;
}
export type SafeMultiSigTransactionEvent = TypedEvent<
  [
    string,
    BigNumber,
    string,
    number,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string
  ],
  SafeMultiSigTransactionEventObject
>;

export type SafeMultiSigTransactionEventFilter =
  TypedEventFilter<SafeMultiSigTransactionEvent>;

export interface SafeSetupEventObject {
  initiator: string;
  owners: string[];
  threshold: BigNumber;
  initializer: string;
  fallbackHandler: string;
}
export type SafeSetupEvent = TypedEvent<
  [string, string[], BigNumber, string, string],
  SafeSetupEventObject
>;

export type SafeSetupEventFilter = TypedEventFilter<SafeSetupEvent>;

export interface SafeToL2Migration extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SafeToL2MigrationInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MIGRATION_SINGLETON(overrides?: CallOverrides): Promise<[string]>;

    migrateFromV111(
      l2Singleton: string,
      fallbackHandler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    migrateToL2(
      l2Singleton: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  MIGRATION_SINGLETON(overrides?: CallOverrides): Promise<string>;

  migrateFromV111(
    l2Singleton: string,
    fallbackHandler: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  migrateToL2(
    l2Singleton: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    MIGRATION_SINGLETON(overrides?: CallOverrides): Promise<string>;

    migrateFromV111(
      l2Singleton: string,
      fallbackHandler: string,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateToL2(l2Singleton: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "ChangedMasterCopy(address)"(
      singleton?: null
    ): ChangedMasterCopyEventFilter;
    ChangedMasterCopy(singleton?: null): ChangedMasterCopyEventFilter;

    "SafeMultiSigTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,bytes)"(
      to?: null,
      value?: null,
      data?: null,
      operation?: null,
      safeTxGas?: null,
      baseGas?: null,
      gasPrice?: null,
      gasToken?: null,
      refundReceiver?: null,
      signatures?: null,
      additionalInfo?: null
    ): SafeMultiSigTransactionEventFilter;
    SafeMultiSigTransaction(
      to?: null,
      value?: null,
      data?: null,
      operation?: null,
      safeTxGas?: null,
      baseGas?: null,
      gasPrice?: null,
      gasToken?: null,
      refundReceiver?: null,
      signatures?: null,
      additionalInfo?: null
    ): SafeMultiSigTransactionEventFilter;

    "SafeSetup(address,address[],uint256,address,address)"(
      initiator?: string | null,
      owners?: null,
      threshold?: null,
      initializer?: null,
      fallbackHandler?: null
    ): SafeSetupEventFilter;
    SafeSetup(
      initiator?: string | null,
      owners?: null,
      threshold?: null,
      initializer?: null,
      fallbackHandler?: null
    ): SafeSetupEventFilter;
  };

  estimateGas: {
    MIGRATION_SINGLETON(overrides?: CallOverrides): Promise<BigNumber>;

    migrateFromV111(
      l2Singleton: string,
      fallbackHandler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    migrateToL2(
      l2Singleton: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MIGRATION_SINGLETON(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    migrateFromV111(
      l2Singleton: string,
      fallbackHandler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    migrateToL2(
      l2Singleton: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
