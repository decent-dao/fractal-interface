/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestNativeTokenReceiver,
  TestNativeTokenReceiverInterface,
} from "../../../contracts/test/TestNativeTokenReceiver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "forwardedGas",
        type: "uint256",
      },
    ],
    name: "BreadReceived",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50609280601d6000396000f3fe60806040523373ffffffffffffffffffffffffffffffffffffffff167f16549311ba52796916987df5401f791fb06b998524a5a8684010010415850bb3345a604051808381526020018281526020019250505060405180910390a200fea264697066735822122035663a4184b682e3d2c1649228db3273b6a2439d885e4203ca9ef996501e7b4c64736f6c63430007060033";

type TestNativeTokenReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestNativeTokenReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestNativeTokenReceiver__factory extends ContractFactory {
  constructor(...args: TestNativeTokenReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestNativeTokenReceiver> {
    return super.deploy(overrides || {}) as Promise<TestNativeTokenReceiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestNativeTokenReceiver {
    return super.attach(address) as TestNativeTokenReceiver;
  }
  override connect(signer: Signer): TestNativeTokenReceiver__factory {
    return super.connect(signer) as TestNativeTokenReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNativeTokenReceiverInterface {
    return new utils.Interface(_abi) as TestNativeTokenReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestNativeTokenReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestNativeTokenReceiver;
  }
}
