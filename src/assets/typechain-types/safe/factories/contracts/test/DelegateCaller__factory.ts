/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DelegateCaller,
  DelegateCallerInterface,
} from "../../../contracts/test/DelegateCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_called",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "makeDelegatecall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610296806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e632e17214610030575b600080fd5b6101096004803603604081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061018d565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610151578082015181840152602081019050610136565b50505050905090810190601f16801561017e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106101dc57805182526020820191506020810190506020830392506101b9565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461023c576040519150601f19603f3d011682016040523d82523d6000602084013e610241565b606091505b50809250819350505081610259573d6000803e3d6000fd5b925092905056fea2646970667358221220588e0081c5d3e0cfad27619350765395f20d7d3c6598ac5f61dd4fb24aa8a67364736f6c63430007060033";

type DelegateCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegateCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DelegateCaller__factory extends ContractFactory {
  constructor(...args: DelegateCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DelegateCaller> {
    return super.deploy(overrides || {}) as Promise<DelegateCaller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DelegateCaller {
    return super.attach(address) as DelegateCaller;
  }
  override connect(signer: Signer): DelegateCaller__factory {
    return super.connect(signer) as DelegateCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegateCallerInterface {
    return new utils.Interface(_abi) as DelegateCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegateCaller {
    return new Contract(address, _abi, signerOrProvider) as DelegateCaller;
  }
}
