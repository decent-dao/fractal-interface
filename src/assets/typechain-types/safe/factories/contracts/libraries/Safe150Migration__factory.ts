/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Safe150Migration,
  Safe150MigrationInterface,
} from "../../../contracts/libraries/Safe150Migration";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ChangedMasterCopy",
    type: "event",
  },
  {
    inputs: [],
    name: "SAFE_150_FALLBACK_HANDLER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_150_SINGLETON",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_150_SINGLETON_L2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2Singleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2WithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "migrateL2WithSetGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "migrateL2WithSetGuardAndFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateSingleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateWithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "migrateWithSetGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "migrateWithSetGuardAndFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506100347388627c8904ecd9df96a572ef32a7ff13b199ed8d61017e60201b60201c565b610089576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610de66024913960400191505060405180910390fd5b6100ac730ee37514644683f7eb9745a5726c722deba77e5261017e60201b60201c565b610101576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610e0a6029913960400191505060405180910390fd5b610124738aa755cb169991fedc3e306751dcb71964a041c761017e60201b60201c565b610179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610e33602b913960400191505060405180910390fd5b610191565b600080823b905060008111915050919050565b610c46806101a06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a5e2eedc11610071578063a5e2eedc1461016e578063b7a446f3146101a2578063dc162932146101e6578063ec7b48c91461022a578063ed007fc61461026e578063f6682ab014610278576100a9565b806307f464a4146100ae5780630db9ceab146100b85780631e98bdc9146100ec57806368cb3d9414610120578063807b56d71461012a575b600080fd5b6100b6610282565b005b6100c0610355565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f461036d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610128610385565b005b61016c6004803603602081101561014057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061042c565b005b6101766104d5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e4600480360360208110156101b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ed565b005b610228600480360360208110156101fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061063a565b005b61026c6004803603602081101561024057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610787565b005b610276610830565b005b6102806108d7565b005b61028a6109aa565b610292610a2a565b730ee37514644683f7eb9745a5726c722deba77e526000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b730ee37514644683f7eb9745a5726c722deba77e5281565b738aa755cb169991fedc3e306751dcb71964a041c781565b61038d6109aa565b610395610282565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323738aa755cb169991fedc3e306751dcb71964a041c76040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b50505050565b6104346109aa565b61043d816104ed565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323738aa755cb169991fedc3e306751dcb71964a041c76040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156104ba57600080fd5b505af11580156104ce573d6000803e3d6000fd5b5050505050565b7388627c8904ecd9df96a572ef32a7ff13b199ed8d81565b6104f56109aa565b7388627c8904ecd9df96a572ef32a7ff13b199ed8d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a13073ffffffffffffffffffffffffffffffffffffffff1663e19a9dd9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b5050505050565b6106426109aa565b730ee37514644683f7eb9745a5726c722deba77e526000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a13073ffffffffffffffffffffffffffffffffffffffff1663e19a9dd9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b5050505050565b61078f6109aa565b6107988161063a565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323738aa755cb169991fedc3e306751dcb71964a041c76040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561081557600080fd5b505af1158015610829573d6000803e3d6000fd5b5050505050565b6108386109aa565b6108406108d7565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323738aa755cb169991fedc3e306751dcb71964a041c76040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108bd57600080fd5b505af11580156108d1573d6000803e3d6000fd5b50505050565b6108df6109aa565b6108e7610a2a565b7388627c8904ecd9df96a572ef32a7ff13b199ed8d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6109d360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bab565b610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610bf06021913960400191505060405180910390fd5b565b6000610a34610bbe565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ba8578073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f945b8148000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b158015610afa57600080fd5b505afa158015610b0e573d6000803e3d6000fd5b505050506040513d6020811015610b2457600080fd5b8101908080519060200190929190505050610ba7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260058152602001807f475333303000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5b50565b600080823b905060008111915050919050565b6000807f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c860001b905080549150509056fe547279696e6720746f206d69677261746520616e20696e76616c69642053616665a2646970667358221220b00dc4b0bb6275b40db66d53fa8129d4581db28eea56c7b12780aa585ee7525064736f6c634300070600335361666520312e342e312053696e676c65746f6e206973206e6f74206465706c6f7965645361666520312e342e312053696e676c65746f6e20284c3229206973206e6f74206465706c6f7965645361666520312e342e312046616c6c6261636b2048616e646c6572206973206e6f74206465706c6f796564";

type Safe150MigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Safe150MigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Safe150Migration__factory extends ContractFactory {
  constructor(...args: Safe150MigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Safe150Migration> {
    return super.deploy(overrides || {}) as Promise<Safe150Migration>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Safe150Migration {
    return super.attach(address) as Safe150Migration;
  }
  override connect(signer: Signer): Safe150Migration__factory {
    return super.connect(signer) as Safe150Migration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Safe150MigrationInterface {
    return new utils.Interface(_abi) as Safe150MigrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Safe150Migration {
    return new Contract(address, _abi, signerOrProvider) as Safe150Migration;
  }
}
